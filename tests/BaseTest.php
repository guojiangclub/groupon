<?php

/*
 * This file is part of ibrand/groupon.
 *
 * (c) iBrand <https://www.ibrand.cc>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace iBrand\Component\Groupon\Test;

use iBrand\Component\Groupon\Models\Groupon;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Orchestra\Testbench\TestCase;


/**
 * Class BaseTest
 * @package iBrand\Component\Groupon\Test
 */
abstract class BaseTest extends TestCase
{
    use DatabaseMigrations;

    /**
     * @var $grouponRepository
     */
    public $grouponRepository;

    /**
     * @var $grouponItemRepository
     */
    public $grouponItemRepository;

    /**
     * set up test.
     */
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->loadMigrationsFrom(__DIR__.'/database/');

        $this->grouponRepository = $this->app->make(\iBrand\Component\Groupon\Repositories\GrouponRepository::class);

        $this->grouponItemRepository = $this->app->make(\iBrand\Component\Groupon\Repositories\GrouponItemRepository::class);

        $this->GrouponService = $this->app->make(\iBrand\Component\Groupon\Services\GrouponService::class);


        $this->seedGoods();

        $this->seedOrders();

        $this->seedProducts();
    }

    /**
     * @param \Illuminate\Foundation\Application $app
     */
    protected function getEnvironmentSetUp($app)
    {
        // Setup default database to use sqlite :memory:
        $app['config']->set('database.default', 'testing');
        $app['config']->set('database.connections.testing', [
            'driver' => 'sqlite',
            'database' => ':memory:',
        ]);
        $app['config']->set('repository.cache.enabled', true);

        $app['config']->set('ibrand.groupon', require __DIR__ . '/../config/groupon.php');
        $app['config']->set('ibrand.groupon.models.goods', Goods::class);
        $app['config']->set('ibrand.groupon.models.product', Product::class);
        $app['config']->set('ibrand.groupon.models.order_special_type', OrderSpecialType::class);
        $app['config']->set('ibrand.groupon.models.order', Order::class);
    }

    /**
     * @param $app
     */
    protected function loadMigrationsFrom($app)
    {
        $this->artisan('migrate', ['--database' => 'testing']);
    }

    /**
     * @param \Illuminate\Foundation\Application $app
     * @return array
     */
    protected function getPackageProviders($app)
    {
        return [
            \Prettus\Repository\Providers\RepositoryServiceProvider::class,
            \Orchestra\Database\ConsoleServiceProvider::class,
            \iBrand\Scheduling\ServiceProvider::class,
            \iBrand\Component\Groupon\GrouponServiceProvider::class
        ];
    }

    /**
     * seed some goods.
     */
    public function seedGoods()
    {
        Goods::create(['name'=>'test1','sell_price'=>100]);
        Goods::create(['name'=>'test2','sell_price'=>200]);
        Goods::create(['name'=>'test3','sell_price'=>300]);
    }

    /**
     * seed some Orders.
     */
    public function seedOrders(){
        Order::create(['order_no'=>'Oxx001','type'=>8,'status'=>1]);
        Order::create(['order_no'=>'Oxx002','type'=>8,'status'=>1]);
        Order::create(['order_no'=>'Oxx003','type'=>8,'status'=>1]);
        Order::create(['order_no'=>'Oxx004','type'=>8,'status'=>1]);
        Order::create(['order_no'=>'Oxx005','type'=>0,'status'=>1]);
    }

    public function seedProducts(){

        Product::create(['goods_id'=>1,'store_nums'=>10,'sku'=>'ATYC173032REG','sell_price'=>'999.00']);
    }

}
